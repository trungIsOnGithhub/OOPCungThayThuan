package com.javapos.mainsale;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

import com.javapos.orders.CustomerOrder;
import com.javapos.orders.OrderHistoryContainer;

/*
 *
 * @author nhom NullPointerException: Trung Nguyen va nhung nguoi ban, Lap trinh nang cao-L02-HK212
 * 
 * Cua so thong tin giup tom tat, xem, thao tac don gian voi thong tin don hang ban duoc trong ngay
 * Cac nut bam tuong duong voi cac chuc nang, gom:
 * 1 nut loc cac don hang co so dien thoai.
 * 1 nut loc cac don hang khong co so dien thoai.
 * 1 nut sap xep cac don hang theo gia ca.
 * 1 nut sap xep theo mac dinh(thu tu gio giac)
 * 1 thanh tim kiem liet ke cac don hang theo so dien thoai.
 * Thong bao gio va thu ngay thang
 */

public class OrderViewer extends javax.swing.JFrame {
    OrderHistoryContainer currentSessionHistory;
    ArrayList<CustomerOrder> historyContainer;
    private DefaultTableModel tableModel;
    
    
    private void showTable(ArrayList<CustomerOrder> listToGenerate){
        tableModel.setRowCount(0);

        for(var order : listToGenerate) {
            tableModel.addRow(new Object[]{ order.getTimeOfOrder(), order.getPhoneNumber(), order.getTotalPrice() });
        }
    }
    private void showCurrentWorkingDay() {
        Date today = new Date();
        SimpleDateFormat dateFormatter = new SimpleDateFormat("dd-MM-yyyy");
        
        this.currentWorkingDayLabel.setText("Hôm nay là: "+dateFormatter.format(today));
    }
    private void showCurrentWorkingTime() {
        Timer currentTimer = new Timer( 0, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                Date nowTime = new Date();
                SimpleDateFormat dateFormatter = new SimpleDateFormat("hh:mm::ss-a");

                currentWorkingTimeLabel.setText("Giờ hiện tại: "+dateFormatter.format(nowTime));
            }
        } );
        
        currentTimer.start();
    }
    
    void renewAndShowOrderViewer() {
        
        this.historyContainer = this.currentSessionHistory.getDeepCopyOfOrderHistory();
        
        this.showTable(this.historyContainer);
        
        this.showCurrentWorkingDay();
        this.showCurrentWorkingTime();
    }
// TRUNG'S CODE
 
    /**
     * Creates new form OrderViewer
     */
    public OrderViewer(){
        this.currentSessionHistory = new OrderHistoryContainer();
        
        initComponents();
        
        this.tableModel = (DefaultTableModel)jTable1.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        finishTxtExportDialog = new javax.swing.JDialog();
        messageTxtExport = new javax.swing.JLabel();
        closeTxtExportDialogButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        onlySDTButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        valueSortButton = new javax.swing.JButton();
        exportTxtButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        currentWorkingDayLabel = new javax.swing.JLabel();
        currentWorkingTimeLabel = new javax.swing.JLabel();
        noSDTButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        phoneNumberPlaceholder = new javax.swing.JTextField();
        findPhoneNumberButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        finishTxtExportDialog.setTitle("Thông báo!!");
        finishTxtExportDialog.setLocation(new java.awt.Point(370, 200));
        finishTxtExportDialog.setMinimumSize(new java.awt.Dimension(606, 268));
        finishTxtExportDialog.setModal(true);

        messageTxtExport.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        messageTxtExport.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        messageTxtExport.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        messageTxtExport.setMaximumSize(new java.awt.Dimension(534, 62));
        messageTxtExport.setMinimumSize(new java.awt.Dimension(534, 62));

        closeTxtExportDialogButton.setText("ĐÓNG");
        closeTxtExportDialogButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeTxtExportDialogButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout finishTxtExportDialogLayout = new javax.swing.GroupLayout(finishTxtExportDialog.getContentPane());
        finishTxtExportDialog.getContentPane().setLayout(finishTxtExportDialogLayout);
        finishTxtExportDialogLayout.setHorizontalGroup(
            finishTxtExportDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, finishTxtExportDialogLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(closeTxtExportDialogButton, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(253, 253, 253))
            .addGroup(finishTxtExportDialogLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(messageTxtExport, javax.swing.GroupLayout.PREFERRED_SIZE, 534, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );
        finishTxtExportDialogLayout.setVerticalGroup(
            finishTxtExportDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(finishTxtExportDialogLayout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addComponent(messageTxtExport, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(closeTxtExportDialogButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocation(new java.awt.Point(300, 150));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "GIỜ MUA", "SỐ ĐIỆN THOẠI", "GIÁ TRỊ ĐƠN HÀNG"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        onlySDTButton.setText("LỌC ĐƠN CÓ SĐT");
        onlySDTButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onlySDTButtonActionPerformed(evt);
            }
        });

        resetButton.setText("VỀ MẶC ĐỊNH");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        valueSortButton.setText("XẾP THEO GIÁ TRỊ");
        valueSortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valueSortButtonActionPerformed(evt);
            }
        });

        exportTxtButton.setText("GHI VÀO FILE TXT");
        exportTxtButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportTxtButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel1.setText("(!) Mặc định thứ tự các đơn hàng được xếp theo thứ tự thanh toán."); // NOI18N

        currentWorkingDayLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        currentWorkingTimeLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        noSDTButton.setText("KHÔNG CÓ SĐT");
        noSDTButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noSDTButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Tìm kiếm đơn hàng theo SĐT:"); // NOI18N

        findPhoneNumberButton.setText("Tìm kiếm");
        findPhoneNumberButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findPhoneNumberButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("<html>(!)Số lần ghi vào file txt sẽ bị giới hạn<br>mỗi phiên làm việc chỉ có MỘT LẦN");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(65, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(currentWorkingDayLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70)
                        .addComponent(currentWorkingTimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(phoneNumberPlaceholder, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(26, 26, 26)
                                    .addComponent(findPhoneNumberButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGap(47, 47, 47)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(61, 61, 61)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(resetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(noSDTButton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(valueSortButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(onlySDTButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(exportTxtButton, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(35, 35, 35))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(currentWorkingDayLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(currentWorkingTimeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(14, 14, 14)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(phoneNumberPlaceholder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(findPhoneNumberButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exportTxtButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(resetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(onlySDTButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(noSDTButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(valueSortButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void valueSortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valueSortButtonActionPerformed

        this.historyContainer = this.currentSessionHistory.getDeepCopyOfOrderHistory();
        
        Collections.sort(this.historyContainer, (CustomerOrder ord1, CustomerOrder ord2) -> 
                                                     { return ord1.getTotalPrice() - ord2.getTotalPrice(); } );

        this.showTable(this.historyContainer);
    }//GEN-LAST:event_valueSortButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed

        this.renewAndShowOrderViewer();
    }//GEN-LAST:event_resetButtonActionPerformed

    private void onlySDTButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onlySDTButtonActionPerformed

        ArrayList<CustomerOrder> tempList = this.currentSessionHistory.getDeepCopyOfOrderHistory();
        
        // Loc ra cac don hang chi co so dien thoai, roi them vafo historyContainer(da duoc xoa het truoc do)
        this.historyContainer.clear();

        for(var order : tempList) {
            if( !order.getPhoneNumber().equals("unknown") ) {
                this.historyContainer.add( order );
            }
        }
        
        this.showTable( this.historyContainer );
    }//GEN-LAST:event_onlySDTButtonActionPerformed

    private void exportTxtButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportTxtButtonActionPerformed
        
        // Dau tien clear va lam sach toan bo UI cung nhu cac thong tin co san
        this.renewAndShowOrderViewer();
        
        boolean check = MainPage.mainTextDataBase.writeOrderHistoryIntoDB(
        		this.historyContainer,
        		this.currentWorkingDayLabel.getText(),
        		this.currentWorkingTimeLabel.getText()
        	);
        
        if( !check ) {
            System.out.println("Loi khi ghi lai lich su don hang vao file");

            this.messageTxtExport.setText( "Ghi ra file txt KHÔNG thành công, hãy kiểm tra lại hệ thống hoặc liên hệ hỗ trợ.");
            this.finishTxtExportDialog.setVisible( true );
        }
        else {
            this.messageTxtExport.setText( "Ghi ra file txt thành công, bạn sẽ không thể thực hiện lại thao tác này cho đến khi khởi động lại chương trình.");
            this.finishTxtExportDialog.setVisible( true );
           
            this.exportTxtButton.setEnabled( false );
        }
    }//GEN-LAST:event_exportTxtButtonActionPerformed

    private void noSDTButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noSDTButtonActionPerformed
        
        ArrayList<CustomerOrder> tempList = this.currentSessionHistory.getDeepCopyOfOrderHistory();
        
        // Loc ra cac don hang chi co so dien thoai, roi them vao historyContainer(da duoc clear truoc do)
        this.historyContainer.clear();

        for(var order : tempList) {
            if( order.getPhoneNumber().equals("unknown") ) {
                this.historyContainer.add( order );
            }
        }
        
        this.showTable( this.historyContainer );
    }//GEN-LAST:event_noSDTButtonActionPerformed

    private void findPhoneNumberButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findPhoneNumberButtonActionPerformed
        
        ArrayList<CustomerOrder> tempList = this.currentSessionHistory.getDeepCopyOfOrderHistory();
        
        //Lay ra SDT can dung de tim cac don hang
        String phoneNumberNeedToFind = this.phoneNumberPlaceholder.getText();
        
        // Loc ra cac don hang cho co so dien thoai can tim, roi them vao historyContainer(da duoc clear truoc do)
        this.historyContainer.clear();

        for(var order : tempList) {
            if( order.getPhoneNumber().equals( phoneNumberNeedToFind ) ) {
                this.historyContainer.add( order );
            }
        }
        
        this.showTable( this.historyContainer );
        
        // Xoa khu vuc nhap SDT di, de tien nhap so mơi va clear UI
        this.phoneNumberPlaceholder.setText("");
    }//GEN-LAST:event_findPhoneNumberButtonActionPerformed

    private void closeTxtExportDialogButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeTxtExportDialogButtonActionPerformed
        // TODO add your handling code here:
        this.finishTxtExportDialog.setVisible( false );
    }//GEN-LAST:event_closeTxtExportDialogButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeTxtExportDialogButton;
    private javax.swing.JLabel currentWorkingDayLabel;
    private javax.swing.JLabel currentWorkingTimeLabel;
    private javax.swing.JButton exportTxtButton;
    private javax.swing.JButton findPhoneNumberButton;
    private javax.swing.JDialog finishTxtExportDialog;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel messageTxtExport;
    private javax.swing.JButton noSDTButton;
    private javax.swing.JButton onlySDTButton;
    private javax.swing.JTextField phoneNumberPlaceholder;
    private javax.swing.JButton resetButton;
    private javax.swing.JButton valueSortButton;
    // End of variables declaration//GEN-END:variables
}
